(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source sed.model)
(set-info :category "industrial")
(set-info :status sat)
(declare-const P0 Bool)
(declare-const P1 Bool)
(declare-const P2 Bool)
(declare-const P3 Bool)
(declare-const P4 (_ BitVec 3))
(assert (bvult P4 (_ bv6 3)))
(declare-const P5 (_ BitVec 4))
(assert (bvult P5 (_ bv10 4)))
(declare-const P6 Bool)
(declare-const P7 (_ BitVec 2))
(declare-const P8 Bool)
(declare-const P9 Bool)
(declare-const P10 (_ BitVec 2))
(assert (bvult P10 (_ bv3 2)))
(assert (or (not (= P2 false)) (= P1 true)))
(assert (or (not (= P2 true)) (= P1 false)))
(assert (or (not (= P3 false)) (= P1 true)))
(assert (or (not (= P3 true)) (not (= P1 true))))
(assert (or (not (= P4 (_ bv1 3))) (= P1 true)))
(assert (or (not (= P4 (_ bv5 3))) (= P1 true)))
(assert (or (not (= P5 (_ bv0 4))) (= P1 true)))
(assert (or (not (= P5 (_ bv1 4))) (= P1 true)))
(assert (or (not (= P5 (_ bv2 4))) (= P1 true)))
(assert (or (not (= P5 (_ bv3 4))) (= P1 true)))
(assert (or (not (= P5 (_ bv4 4))) (= P1 true)))
(assert (or (not (= P5 (_ bv5 4))) (= P1 true)))
(assert (or (not (= P5 (_ bv6 4))) (= P1 true)))
(assert (or (not (= P5 (_ bv7 4))) (= P1 true)))
(assert (or (not (= P5 (_ bv8 4))) (= P1 true)))
(assert (or (not (= P5 (_ bv9 4))) (not (= P1 true))))
(assert (or (not (= P6 false)) (= P4 (_ bv2 3)) (= P4 (_ bv3 3)) (= P4 (_ bv4 3))))
(assert (or (not (= P6 true)) (not (= P4 (_ bv2 3)))))
(assert (or (not (= P6 true)) (not (= P4 (_ bv3 3)))))
(assert (or (not (= P6 true)) (not (= P4 (_ bv4 3)))))
(assert (or (not (= P7 (_ bv0 2))) (= P0 false)))
(assert (or (not (= P7 (_ bv0 2))) (= P4 (_ bv0 3)) (= P4 (_ bv1 3)) (= P4 (_ bv2 3)) (= P4 (_ bv3 3)) (= P4 (_ bv4 3)) (= P5 (_ bv0 4)) (= P5 (_ bv1 4)) (= P5 (_ bv2 4)) (= P5 (_ bv3 4)) (= P5 (_ bv4 4))))
(assert (or (not (= P7 (_ bv1 2))) (= P1 true)))
(assert (or (not (= P7 (_ bv1 2))) (= P0 false)))
(assert (or (not (= P7 (_ bv1 2))) (= P4 (_ bv0 3)) (= P4 (_ bv1 3)) (= P4 (_ bv2 3)) (= P4 (_ bv3 3)) (= P4 (_ bv4 3)) (= P5 (_ bv0 4)) (= P5 (_ bv1 4)) (= P5 (_ bv2 4)) (= P5 (_ bv3 4)) (= P5 (_ bv4 4))))
(assert (or (not (= P7 (_ bv2 2))) (= P0 true)))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 true))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P4 (_ bv0 3)))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P4 (_ bv1 3)))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P4 (_ bv2 3)))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P4 (_ bv3 3)))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P4 (_ bv4 3)))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P5 (_ bv0 4)))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P5 (_ bv1 4)))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P5 (_ bv2 4)))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P5 (_ bv3 4)))))
(assert (or (not (= P7 (_ bv3 2))) (not (= P0 false)) (not (= P5 (_ bv4 4)))))
(assert (or (not (= P8 false)) (= P4 (_ bv2 3)) (= P4 (_ bv3 3)) (= P4 (_ bv4 3))))
(assert (or (not (= P8 false)) (not (= P6 false))))
(assert (or (not (= P8 true)) (= P6 false) (not (= P4 (_ bv2 3)))))
(assert (or (not (= P8 true)) (= P6 false) (not (= P4 (_ bv3 3)))))
(assert (or (not (= P8 true)) (= P6 false) (not (= P4 (_ bv4 3)))))
(assert (or (not (= P9 false)) (= P4 (_ bv2 3)) (= P4 (_ bv3 3)) (= P4 (_ bv4 3))))
(assert (or (not (= P9 false)) (not (= P5 (_ bv6 4)))))
(assert (or (not (= P9 true)) (= P5 (_ bv6 4)) (not (= P4 (_ bv2 3)))))
(assert (or (not (= P9 true)) (= P5 (_ bv6 4)) (not (= P4 (_ bv3 3)))))
(assert (or (not (= P9 true)) (= P5 (_ bv6 4)) (not (= P4 (_ bv4 3)))))
(assert (or (not (= P10 (_ bv0 2))) (= P1 true)))
(assert (or (not (= P10 (_ bv1 2))) (= P1 true)))
(assert (or (not (= P10 (_ bv2 2))) (not (= P1 true))))
(check-sat)
(exit)
